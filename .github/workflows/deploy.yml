name: FTP Workflow

on:
  push:
    branches:
      - main

jobs:
  ftp_initialization:
    if: "!fileExists('README.md')" # pseudo check; will implement via script
    name: FTP Initialization
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp

      - name: Download FTP Root Contents
        run: |
          lftp -u "${{ secrets.FTP_USERNAME }}","${{ secrets.FTP_PASSWORD }}" ${{ secrets.FTP_HOST }} <<EOF
          mirror --verbose --only-newer --parallel=4 --continue /
          EOF

      - name: Prevent Git from creating submodules in htdocs
        run: |
          git config --global submodule.recurse false
          git rm --cached -r htdocs || echo "No htdocs folder to process"

  ftp_deployment:
    if: "fileExists('README.md')" # pseudo check; will implement via script
    name: FTP Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp

      - name: Delete FTP Root Folder Contents
        run: |
          lftp -u "${{ secrets.FTP_USERNAME }}","${{ secrets.FTP_PASSWORD }}" ${{ secrets.FTP_HOST }} <<EOF
          # List all root-level folders
          cls -1
          # Delete contents inside each root folder
          for dir in $(cls -1); do
            mirror --delete --only-missing --verbose --continue "$dir" "$dir"
          done
          EOF

      - name: Upload Repository to FTP Root
        run: |
          lftp -u "${{ secrets.FTP_USERNAME }}","${{ secrets.FTP_PASSWORD }}" ${{ secrets.FTP_HOST }} <<EOF
          mirror --reverse --verbose --delete --parallel=4 ./ /
          EOF
